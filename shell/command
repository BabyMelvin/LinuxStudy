1.awk '{str[$1]=str[$1]" "$2} {for(var in str) print var" "str[var]' file
///////////////////典型的月经问题，注意$2不要写在双引号中////////////////

2.tcpdump命令小结：
 1、针对特定网口抓包：tcpdump -i eth0
 2、抓取特定数目的包：tcpdump -c 2 -i eth0
 3、将抓到的包写入文件中：tcpdump -w file.pcap -i eth0(文件格式为pcap,用wireshark读取解析)
 4、读取tcpdump保存文件：tcpdump -r file.pcap
 5、抓包结果中包含抓包日期：tcpdump -n tttt -i eth0
 6、抓取包的协议类型：tcpdump -i eth0 arp/tcp/udp
 7、指定抓包端口：tcpdump -i eth0 port 22
 8、抓取特定目标IP和端口的包：tcpdump -i eth0 dst xxx.xxx.xxx.xxx and port 22

3、Linux网络配置
 1、设置IP：ifconfig eth0 xxx.xxx.xxx.xxx netmask xxx.xxx.xxx.xxx
 2、设置默认网关：route add default gw xxx.xxx.xxx.xxx
 3、DNS服务器配置文件在/etc/resolv.conf中
 4、网络配置文件在/etc/network/interfaces中
 
4、ubuntu防火墙设置(root权限)
 1、ufw version:防火墙版本
 2、ufw enable/disable：启动防火墙
 3、ufw allow|deny service(22/tcp):打开或关闭端口
 4、ufw status:防火墙状态

5、修改默认root密码：sudo passwd root(user)

6、SHELL视频学习
  1、cat >test.sh 直接在命令行编写脚本。
  2、source和.(执行脚本命令)：在命令行中执行脚本时会另外打开一个shell，环境变量独立。如果以.命令执行文件，子SHELL会将环境变量传递给主SHELL.
  3、TMOUT(环境变量)：超过指定值即退出当前shell
  4、全局变量的设置：将变量存放在/etc/profile(~/.bashrc)中，然后export，这样即可在命令行或脚本中引用。
  5、单引号不会对变量名进行解析


7、LINUX基础命令
  1、split -b size file   将文件切割为指定大小
  2、split -l number file 根据文件行数进行分割
  3、${variable %.*}:从变量右侧开始匹配删除
  4、${variable#*.} :从变量左侧开始匹配删除
  5、dd if=(/dev/zero:字符设备，不断返回0值字节)输入文件 of=输出文件 bs=大小(1M) count=1(块数)
  6、diff -Naur directory1 directory2 > version.patch:递归查找文件夹内的不同
  7、patch -p1 file < version.patch:用version.patch对文件进行修补
  8、head命令：
	1、head -n 4 file:打印文件的前4行
        2、head -n -M file:打印除最后M行外的所有行
  9、tail命令：
	1、tail -n 5 file:打印文件的最后5行
	2、tail -n -M file:打印前M行外的所有行
 10、grep命令小结:
	1、grep "pattern" file1,file2,file3:对多个文件进行搜索，分别输出匹配到的
	2、grep -c "pattern" file:输出匹配到的行数(非次数)
	3、echo xxx  | grep -o "pattern" | wc -l：输出匹配到的次数
	4、grep -n "pattern" file:输出包含匹配字符串的行号
	5、grep -i "pattern" file:忽略大小写的匹配
	6、grep -l "pattern" file:输出匹配文件位于哪个目录
	7、grep "pattern" directory -r(-R) -n:对文本进行递归搜索
	8、grep "pattern" directory -r --include *.{c,cpp}
	9、grep "pattern" directory -r --exclude *.{c,cpp}
       10、grep "pattern" file -lZ | xargs -0 rm:使用0值字节作为后缀的grep和xargs
       11、echo xxx | grep "pattern" -A  NUM:输出匹配结果后的NUM行
       12、echo xxx | grep "pattern" -B  NUM:输出匹配结果前的NUM行
       13、echo xxx | grep "pattern" -C  NUM:输出匹配结果前后的NUM行

 11、cut命令:
      指定定界符：
	1、cut -f FIELD_LIST1,FIELD_LIST2  filename:提取多个字段或列
	2、cut -f FIELD_LIST --complement filename:提取除FIELD_LIST以外的所有列
	3、cut -d"delimiter":指定字段定界符
      不指定定界符：
	1、cut -c1-5 file:取出第一个字符至第五个字符
	2、cut -c1-5,6-10 --output-delimiter " ":指定输出定界符
