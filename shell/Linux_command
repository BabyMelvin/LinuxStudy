1、修改默认root密码：sudo passwd root(user)

2、SHELL视频学习
  1、cat >test.sh 直接在命令行编写脚本。
  2、source和.(执行脚本命令)：在命令行中执行脚本时会另外打开一个shell，环境变量独立。如果以.命令执行文件，子SHELL会将环境变量传递给主SHELL.
  3、TMOUT(环境变量)：超过指定值即退出当前shell
  4、全局变量的设置：将变量存放在/etc/profile(~/.bashrc)中，然后export，这样即可在命令行或脚本中引用。
  5、单引号不会对变量名进行解析
  6、${string/#(%)pattern/replacemet}:从字符开头处进行匹配替换
  7、${test:-unset}和${test:unset}的区别  
  8、执行删除文件命令时，必须先查看文件路径是否有值，如果没有值或者路径不正确，可能会导致灾难性的结果，因此在删除文件时最好先进行初值安全检查
     find ${PATH:-/tmp} -type f print0 | xargs -0 rm -rf


3、LINUX基础命令
  1、split -b size file   将文件切割为指定大小
  2、split -l number file 根据文件行数进行分割
  3、${variable %.*}:从变量右侧开始匹配删除
  4、${variable#*.} :从变量左侧开始匹配删除
  5、dd if=(/dev/zero:字符设备，不断返回0值字节)输入文件 of=输出文件 bs=大小(1M) count=1(块数)
  6、diff -Naur directory1 directory2 > version.patch:递归查找文件夹内的不同
  7、patch -p1 file < version.patch:用version.patch对文件进行修补
  8、head命令：
	1、head -n 4 file:打印文件的前4行
        2、head -n -M file:打印除最后M行外的所有行
  9、tail命令：
	1、tail -n 5 file:打印文件的最后5行
	2、tail -n -M file:打印前M行外的所有行
 10、grep命令小结:
	1、grep "pattern" file1,file2,file3:对多个文件进行搜索，分别输出匹配到的
	2、grep -c "pattern" file:输出匹配到的行数(非次数)
	3、echo xxx  | grep -o "pattern" | wc -l：输出匹配到的次数
	4、grep -n "pattern" file:输出包含匹配字符串的行号
	5、grep -i "pattern" file:忽略大小写的匹配
	6、grep -l "pattern" file:输出匹配文件位于哪个目录
	7、grep "pattern" directory -r(-R) -n:对文本进行递归搜索
	8、grep "pattern" directory -r --include *.{c,cpp}
	9、grep "pattern" directory -r --exclude *.{c,cpp}
       10、grep "pattern" file -lZ | xargs -0 rm:使用0值字节作为后缀的grep和xargs
       11、echo xxx | grep "pattern" -A  NUM:输出匹配结果后的NUM行
       12、echo xxx | grep "pattern" -B  NUM:输出匹配结果前的NUM行
       13、echo xxx | grep "pattern" -C  NUM:输出匹配结果前后的NUM行

4、cut命令:
      指定定界符：
	1、cut -f FIELD_LIST1,FIELD_LIST2  filename:提取多个字段或列
	2、cut -f FIELD_LIST --complement filename:提取除FIELD_LIST以外的所有列
	3、cut -d"delimiter":指定字段定界符
      不指定定界符：
	1、cut -c1-5 file:取出第一个字符至第五个字符
	2、cut -c1-5,6-10 --output-delimiter " ":指定输出定界符
	
      cut注意要点:-d选项需手动指定,默认值是tab键,非空格(important) --output-delimiter后接输出定界符时需加空格，否则无法输出。

5、seq命令：
      seq -w:输入的字符串宽带相同,ps:01 02 03
      seq -s:指定定界符

6、文件清空：
     1、 >file
     2、cat /dev/null > file
     3、cat <file >file

7、umask用法小结：
     1、新建目录初始权限为777
     2、新建文件初始权限为666
     3、文件，目录的实际权限根据umask的值各不相同
        1、文件
 	   假设umask各权限位均为奇数：则实际权限值为初始权限666-umask，在分别依据各权限位的奇偶性进行加1处理(如果是奇数则加1否则不做处理)
        2、目录
           和文件类似，但不需要进行加减处理，即实际权限=777-umask
	
8、更新内核
   cd /usr/src
   gzip -cd patchxx.gz | patch -p0      

9、expr:
   匹配字符串开头的子串长度:
       expr match "$string " '$substring'(正则表达式)
       expr "$string" : '$substring'
   索引:
       expr index $string $substring:第一次匹配的位置
   字符串长度：
       expr length $string
   截取字符串：
       expr substr $stirng $position $length
   提取字符串：
      从开头提取: expr match "$string" '\($substring\)'
      从结尾提取: expr match "$string" '.*\($substring\)'

10、子串替换：
    ${string/substring/replacement}:替换第一个匹配
    ${string//substring/replacement}:替换所有的匹配
   
11、变量替换：
    ${parameter-default}:如果变量parameter没被声明,那么就使用默认值
    ${parameter:-default}:如果变量parameter没被设置,那么就使用默认值
    
12、指定变量类型：
    declare选项:
        1、declare -r var:声明只读变量
        2、declare -i var:声明整数
        3、declare -a array:声明数组
        4、declare -f:列出当前所有函数




